Depois de tratar os dados

from sklearn.linear_model import LogicticRegression
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import StratifiedKfold

stratifiedkfold = StratifiedKfold(n_splits=5)

modelo = LogisticRegression()
resultado = cross_val_score(modelo, x, y, cv=stratifiedkfold)
print(resultado.mean()) # O valor impresso será a porcentagem de acerto que o modelo conseguiu fazer, ou seja, uma acurácia x%



__________________________________________

É possível também fazer alguns ajustes finos na regressão logística:

valores_c = np.array([0.01, 0.1, 0.5, 1, 2, 3])
regularizacao = ['l1', 'l2']
valores_grid {'C': valores_c, 'penalty'= regularização}

modelo = LogisticRegression()

grid_regressaologistica = GridSearchCV(estimator=modelo, param_grid=valores_grid, cv=5)
grid_regressaologistica.fit(x,y)

print('Melhor acurácia: ', grid_regressaologistica.best_score_)
print('Parâmetro C: ', grid_regressaologistica.best_estimator_.C)
print('Regularização: ', grid_regressaologistica.best_estimator_.penalty)









