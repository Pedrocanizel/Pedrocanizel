O primeiro passo é dividir entre variáveis numéricas e categóricas

df_numerico = df.select_dtypes(include['int64', 'float64']) # Selecionando apenas números
df_nao_numerico = df.select_dtypes(exclude['int64', 'float64', 'datetime64[ns]']) # Selecionando apenas não números

###Após separar meu dataframe em variáveis numéricas e não numéricas, eu posso começar aplicar alguns testes estatísticos.

# Estatística de tendência central

ct1 = pd.DataFrame(df_numerico.apply(np.mean)).T # Criando um df com meus dados e obtendo a média e depois transpondo para melhor visualizar
ct2 = pd.DataFrame(df_numerico.apply(np.median)).T # Criando um df com meus dados e obtendo a mediana e depois transpondo para melhor visualizar

# Estatística de dispersão

d1 = pd.DataFrame(df_numerico.apply(np.std)).T # Criando um df com meus dados e obtendo o desvio padrão e depois transpondo para melhor visualizar
d2 = pd.DataFrame(df_numerico.apply(min)).T # Criando um df com meus dados e obtendo o mínimo e depois transpondo para melhor visualizar
d3 = pd.DataFrame(df_numerico.apply(max)).T # Criando um df com meus dados e obtendo o máximo e depois transpondo para melhor visualizar
d4 = pd.DataFrame(df_numerico.apply(lambda x: x.max() - x.min())).T # Criando um df com meus dados e obtendo o range e depois transpondo para melhor visualizar
d5 = pd.DataFrame(df_numerico.apply(lambda x: x.skew())).T # Criando um df com meus dados e obtendo o skew e depois transpondo para melhor visualizar
d6 = pd.DataFrame(df_numerico.apply(lambda x: x.kurtosis())).T # Criando um df com meus dados e obtendo a kurtosis e depois transpondo para melhor visualizar

# Concatenar

m = pd.concat([d1, d2, d3, d4, d5, d6, ct1, ct2]).T.reset_index() # Concatenando na ordem que desejo ver meus dados, transpondo e resetando indice




















